<launch>

  <!-- a name used as ROS namespace -->
  <arg name="name" default=""/>
  <!-- the serial number of the robot, leave empty to connect to the first found -->
  <arg name="serial_number" default="3JKDH6U00171U2"/>
  <!-- the connection type; one of
    - sta (managed network)
    - ap (robot's access point network)
    - rndis (usb)
  -->
  <arg name="conn_type" default="sta"/>
  <!-- the log-level used by the internal robomaster API -->
  <arg name="lib_log_level" default="ERROR"/>
  <!-- the video [vertical] resolution; one of
    - 360 (640x360)
    - 540 (960x540)
    - 720 (1280x640)
 -->
  <arg name="video_resolution" default="360"/>
  <!-- whether to publish the raw [decompressed] images to the topic `<name>/camera/image_raw` -->
  <arg name="video_raw" default="false"/>
  <!-- whether to publish the original h264 video stream to the topic `<name>/camera/image_h264` -->
  <arg name="video_h264" default="false"/>
  <!-- whether to publish the compressed [jpeg] images to the topic `<name>/camera/image_compressed` -->
  <arg name="video_compressed" default="false"/>
  <!-- whether to publish the raw [decompressed] audio to the topic `<name>/camera/audio` -->
  <arg name="audio_raw" default="false"/>
  <!-- whether to publish the original [compressed] opus audio stream to the topic `<name>/camera/audio_opus` -->
  <arg name="audio_opus" default="false"/>
  <!-- the rate [Hz] to publish the odometry -->
  <arg name="chassis_rate" default="10"/>
  <!-- the rate [Hz] to publish aggregated joint states -->
  <arg name="joint_state_rate" default="10.0"/>
  <!-- the [arm] left motor encoder value at zero angle -->
  <arg name="left_motor_zero" default="1242"/>
  <!-- the [arm] right motor encoder value at zero angle -->
  <arg name="right_motor_zero" default="1273"/>
  <!-- the [arm] left motor direction; one of
    - +1 for angle increases when encoder increases
    - -1 for angle decreases when encoder increases
   -->
  <arg name="left_motor_direction" default="-1"/>
  <!-- the [arm] right motor direction; one of
    - +1 for angle increases when encoder increases
    - -1 for angle decreases when encoder increases
   -->
  <arg name="right_motor_direction" default="-1"/>
  <!-- Whether at least one sensor adapter (IO) is connected and should be published to `<name>/...`  -->
  <arg name="sensor_adapter" default="false"/>
  <!-- the rate [Hz] at which to publish the sensor adapter values -->
  <arg name="sensor_adapter_rate" default="10"/>

  <group>
  <include file="$(find-pkg-share robomaster_ros)/launch/main.launch">
    <arg name="arm" value="false"/>
    <arg name="gripper" value="false"/>
    <arg name="model" value="ep"/>
    <arg name="name" value="$(var name)"/>
    <arg name="serial_number" value="$(var serial_number)"/>
    <arg name="conn_type" value="$(var conn_type)"/>
    <arg name="lib_log_level" value="$(var lib_log_level)"/>
    <arg name="video_resolution" value="$(var video_resolution)"/>
    <arg name="video_raw" value="$(var video_raw)"/>
    <arg name="video_h264" value="$(var video_h264)"/>
    <arg name="video_compressed" value="$(var video_compressed)"/>
    <arg name="audio_raw" value="$(var audio_raw)"/>
    <arg name="audio_opus" value="$(var audio_opus)"/>
    <arg name="chassis_rate" value="$(var chassis_rate)"/>
    <arg name="joint_state_rate" value="$(var joint_state_rate)"/>
    <arg name="left_motor_zero" value="$(var left_motor_zero)"/>
    <arg name="right_motor_zero" value="$(var right_motor_zero)"/>
    <arg name="left_motor_direction" value="$(var left_motor_direction)"/>
    <arg name="right_motor_direction" value="$(var right_motor_direction)"/>
    <arg name="sensor_adapter" value="$(var sensor_adapter)"/>
    <arg name="sensor_adapter_rate" value="$(var sensor_adapter_rate)"/>
  </include>
  </group>

  <!-- orientation for the robot when going back to base;
    - 0: normal
    - 1: reverse
   -->
  <arg name="return_orientation" default="0"/>

  <!-- which node to use for moving the robot;
    - 'action_client'
    - 'speed_controller'
   -->
  <arg name="movement_node" default="speed_controller"/>

  <arg name="gap_dist" default="1.0"/>
  <arg name="gap_theta" default="0.52"/>
  <arg name="linear_speed" default="0.3"/>
  <arg name="angular_speed" default="0.55"/>
  
  <arg name="sim" default="false"/>
  <let name="exact_pose" value="/sim_ros2_interface/$(var name)" if="$(var sim)"/>
  <let name="exact_pose" value="/optitrack/$(var name)" unless="$(var sim)"/>
 

  <group>
  <push-ros-namespace namespace="$(var name)"/>

  <node name="noise_estimation" pkg="sentinel" exec="noise" output="screen" args="--ros-args --log-level info">
    <remap from="exact_pose" to="$(var exact_pose)"/>
  </node>

  <node name="follower" pkg="sentinel" exec="follower" output="screen" args="--ros-args --log-level info">
    <param name='movement_node' value="$(var movement_node)"/>
    <param name='gap_dist' value="$(var gap_dist)"/>
    <param name='gap_theta' value="$(var gap_theta)"/>
    <param name='linear_speed' value="$(var linear_speed)"/>
    <param name='angular_speed' value="$(var angular_speed)"/>
  </node>

  <node name="follow_path" pkg="sentinel" exec="follow_path" output="screen" args="--ros-args --log-level info"
  	 if="$(eval '\'$(var movement_node)\' == \'action_client\'')">
    <param name='return_orientation' value="$(var return_orientation)"/>
  </node>

  <group if="$(eval '\'$(var movement_node)\' == \'speed_controller\'')">
    <node name="followSpeed_controller" pkg="sentinel" exec="followSpeed_controller" output="screen" args="--ros-args --log-level info">
    </node>

    <node name="speed_controller" pkg="sentinel" exec="speed_controller" output="screen" args="--ros-args --log-level info">
    </node>
  </group>

  </group>

</launch>
